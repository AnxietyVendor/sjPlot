% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_model.R
\name{plot_model}
\alias{plot_model}
\title{Various plot types for regression models}
\usage{
plot_model(fit, type = "est", exponentiate, terms = NULL,
  sort.est = FALSE, rm.terms = NULL, group.terms = NULL, title = NULL,
  axis.title = NULL, axis.labels = NULL, axis.lim = NULL,
  grid.breaks = NULL, show.intercept = FALSE, show.values = FALSE,
  show.p = FALSE, geom.size = NULL, geom.colors = "Set1",
  wrap.title = 50, wrap.labels = 25, digits = 2, vline.type = 2,
  vline.color = "grey70", ...)
}
\arguments{
\item{type}{Type of plot. Use one of following:
\describe{
  \item{\code{"est"}}{(default) for forest-plot like plot of estimates. If the fitted model only contains one predictor, intercept and slope are plotted.}
  \item{\code{"pred"}}{to plot predicted values for the response, related to specific predictors. See 'Details'.}
  \item{\code{"eff"}}{to plot marginal effects of all terms in \code{fit}. Note that interaction terms are excluded from this plot.}
  \item{\code{"int"}}{to plot marginal effects of interaction terms in \code{fit}.}
  \item{\code{"std"}}{for forest-plot like plot of standardized beta values. If the fitted model only contains one predictor, intercept and slope are plotted.}
  \item{\code{"std2"}}{for forest-plot like plot of standardized beta values, however, standardization is done by dividing by two sd (see 'Details'). If the fitted model only contains one predictor, intercept and slope are plotted.}
  \item{\code{"slope"}}{to plot regression lines for each single predictor of the fitted model, against the response (linear relationship between each model term and response).}
  \item{\code{"resid"}}{to plot regression lines for each single predictor of the fitted model, against the residuals (linear relationship between each model term and residuals). May be used for model diagnostics.}
  \item{\code{"ma"}}{to check model assumptions. Note that only three arguments are relevant for this option \code{fit} and \code{complete.dgns}. All other arguments are ignored.}
  \item{\code{"vif"}}{to plot Variance Inflation Factors.}
}}

\item{exponentiate}{Logical, if \code{TRUE} and models inherit from generalized
linear models, estimates will be exponentiated (e.g., log-odds will
be displayed as odds ratios). By default, \code{exponentiate} will
automatically be set to \code{FALSE} or \code{TRUE}, depending on
the class of \code{fit}.}

\item{terms}{Character vector with the names of those from \code{fit}, which
should be used to plot for. This argument depends on the plot-type;
for \code{type = "pred"} or \code{type = "eff"}, \code{terms} indicates
for which terms marginal effects should be displayed. At least one term
is required to calculate effects, maximum length is three terms,
where the second and third term indicate the groups, i.e. predictions
of first term are grouped by the levels of the second (and third)
term. Indicating levels in square brackets allows for selecting
only specific groups. Term name and levels in brackets must be
separated by a whitespace character, e.g.
\code{terms = c("age", "education [1,3]")}. For more details, see
\code{\link[ggeffects]{ggpredict}}.}

\item{rm.terms}{Character vector with names that indicate which terms should
be removed from the plot. \code{rm.terms = "t_name"} would remove the
term \emph{t_name}. Default is \code{NULL}, i.e. all terms are
used.}

\item{show.intercept}{Logical, if \code{TRUE}, the intercept of the fitted
model is also plotted. Default is \code{FALSE}. If \code{exponentiate = TRUE},
please note that due to exponential transformation of estimates, the
intercept in some cases is non-finite and the plot can not be created.}

\item{show.p}{Logical, adds significance levels to values, or value and
variable labels.}
}
\description{
To Do...
}
