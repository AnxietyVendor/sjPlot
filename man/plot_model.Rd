% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_model.R
\name{plot_model}
\alias{plot_model}
\alias{get_model_data}
\title{Various plot types for regression models}
\usage{
plot_model(model, type = c("est", "re", "eff", "pred", "int", "std", "std2",
  "slope", "resid", "diag"), exponentiate, terms = NULL, sort.est = NULL,
  rm.terms = NULL, group.terms = NULL, order.terms = NULL,
  pred.type = c("fe", "re"), ri.nr = NULL, title = NULL,
  axis.title = NULL, axis.labels = NULL, axis.lim = NULL,
  grid.breaks = NULL, ci.lvl = NULL, show.intercept = FALSE,
  show.values = FALSE, show.p = TRUE, show.data = FALSE,
  value.offset = NULL, dot.size = NULL, line.size = NULL,
  colors = "Set1", facets, wrap.title = 50, wrap.labels = 25,
  case = "parsed", digits = 2, vline.color = NULL, ...)

get_model_data(model, type = c("est", "re", "eff", "pred", "int", "std",
  "std2", "slope", "resid", "diag"), exponentiate, terms = NULL,
  sort.est = NULL, rm.terms = NULL, group.terms = NULL,
  order.terms = NULL, pred.type = c("fe", "re"), ri.nr = NULL,
  title = NULL, axis.title = NULL, axis.labels = NULL, axis.lim = NULL,
  grid.breaks = NULL, ci.lvl = NULL, show.intercept = FALSE,
  show.values = FALSE, show.p = TRUE, show.data = FALSE,
  value.offset = NULL, dot.size = NULL, line.size = NULL,
  colors = "Set1", facets, wrap.title = 50, wrap.labels = 25,
  case = "parsed", digits = 2, vline.color = NULL, ...)
}
\arguments{
\item{type}{Type of plot. Use one of following:
\describe{
  \item{\code{"est"}}{(default) for forest-plot of estimates. If the fitted model only contains one predictor, slope-line is plotted.}
  \item{\code{"re"}}{for mixed effects models, plots the random effects.}
  \item{\code{"pred"}}{to plot predicted values (marginal effects) for specific model terms. See \code{\link[ggeffects]{ggpredict}} for details.}
  \item{\code{"eff"}}{similar to \code{type = "pred"}, however, discrete predictors are held constant at their proportions (not reference level). See \code{\link[ggeffects]{ggeffect}} for details.}
  \item{\code{"int"}}{to plot marginal effects of interaction terms in \code{model}.}
  \item{\code{"std"}}{for forest-plot of standardized beta values.}
  \item{\code{"std2"}}{for forest-plot of standardized beta values, however, standardization is done by dividing by two sd (see 'Details').}
  \item{\code{"slope"}}{to plot regression lines for each single predictor of the fitted model, against the response (linear relationship between each model term and response).}
  \item{\code{"resid"}}{to plot regression lines for each single predictor of the fitted model, against the residuals (linear relationship between each model term and residuals). May be used for model diagnostics.}
  \item{\code{"diag"}}{to check model assumptions.}
  \item{\code{"vif"}}{to plot Variance Inflation Factors.}
}}

\item{exponentiate}{Logical, if \code{TRUE} and models inherit from generalized
linear models, estimates will be exponentiated (e.g., log-odds will
be displayed as odds ratios). By default, \code{exponentiate} will
automatically be set to \code{FALSE} or \code{TRUE}, depending on
the class of \code{fit}.}

\item{terms}{Character vector with the names of those terms from \code{model}
that should be plotted. This argument depends on the plot-type:
\describe{
  \item{\code{type = "est"}}{
    Select terms that should be plotted. All other term are removed
    from the output.
  }
  \item{\code{type = "pred"} or \code{type = "eff"}}{
    Here \code{terms} indicates for which terms marginal effects
    should be displayed. At least one term is required to calculate
    effects, maximum length is three terms, where the second and
    third term indicate the groups, i.e. predictions of first term
    are grouped by the levels of the second (and third) term.
    Indicating levels in square brackets allows for selecting only
    specific groups. Term name and levels in brackets must be separated
    by a whitespace character, e.g. \code{terms = c("age", "education [1,3]")}.
    For more details, see \code{\link[ggeffects]{ggpredict}}.
  }
}}

\item{sort.est}{Determines in which way estimates are sorted in the plot:
\itemize{
  \item If \code{NULL} (default), no sorting is done and estimates are sorted in the same order as they appear in the model formula.
  \item If \code{TRUE}, estimates are sorted in descending order, with highedt estimate at the top.
  \item If \code{sort.est = "sort.all"}, estimates are re-sorted for each coefficient (only applies if \code{type = "re"} and \code{facets = FALSE}), i.e. the estimates of the random effects for each predictor are sorted and plotted to an own plot.
  \item If \code{type = "re"}, specify a predictor's / coefficient's name to sort estimates according to this random effect.
  }}

\item{rm.terms}{Character vector with names that indicate which terms should
be removed from the plot. Counterpart to \code{terms}.
\code{rm.terms = "t_name"} would remove the term \emph{t_name}.
Default is \code{NULL}, i.e. all terms are used. Note that this
argument does not apply to \code{type = "eff"}, \code{type = "pred"}
or \code{type = "int"}.}

\item{axis.title}{Character vector of length one or two (depending on
the plot function and type), used as title(s) for the x and y axis.
If not specified, a default labelling  is chosen. \strong{Note:}
Some plot types may not support this argument sufficiently. In such
cases, use the returned ggplot-object and add axis titles manually with
\code{\link[ggplot2]{labs}}.}

\item{show.intercept}{Logical, if \code{TRUE}, the intercept of the fitted
model is also plotted. Default is \code{FALSE}. If \code{exponentiate = TRUE},
please note that due to exponential transformation of estimates, the
intercept in some cases is non-finite and the plot can not be created.}

\item{...}{Other arguments, passed down to various functions. Here is the
description of these arguments in detail.
\describe{
  \item{\code{auto.label}}{
    Logical value, if \code{TRUE} (the default), plot-labels are based
    on value and variable labels, if the data is labelled. See
    \code{\link[sjlabelled]{get_label}} and
    \code{\link[sjlabelled]{get_term_labels}} for details.
  }
  \item{\code{value.size}}{
    Numeric value, which can be used for all plot types where the
    argument \code{show.values} is applicable, e.g.
    \code{value.size = 4}.
  }
  \item{\code{prob.inner} and \code{prob.outer}}{
    For \code{stanreg}-models (fitted with the \pkg{rstanarm}-package)
    and plot-type \code{type = "est"}, you can specify numeric values
    between 0 and 1 for \code{prob.inner} and \code{prob.outer}, which
    will then be used as inner and outer probabilities for the uncertainty
    intervals (HDI). By default, the inner probability is 0.5 and the
    outer probability is 0.89 (unless \code{ci.lvl} is specified - in
    this case, \code{ci.lvl} is used as outer probability).
  }
  \item{\code{bpe}}{
    Also for \code{stanreg}-models (fitted with the \pkg{rstanarm}-package),
    the Bayesian point estimate is, by default, the median of the posterior
    distribution. Use \code{bpe} to define other functions to calculate
    the Bayesion point estimate. \code{bpe} needs to be a character naming
    the specific function, which is passed to the \code{fun}-argument
    in \code{\link[sjstats]{typical_value}}. So, \code{bpe = "mean"}
    would calculate the mean value of the posterior distribution.
  }
  \item{\code{bpe.style}}{
    Again for \code{stanreg}-models (fitted with the \pkg{rstanarm}-package),
    the Bayesian point estimate is indicated as a small, vertical line
    by default. Use \code{bpe.style = "dot"} to plot a dot instead
    of a line for the point estimate.
  }
}}
}
\description{
To Do...
}
